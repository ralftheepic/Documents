

services : long running task that requires no ui 
	UnBound 
	Bound

broadcast recievers: messages that are sent to the phone are called broadcast. so component that listen for this notification are called broadcast recievers

	System announcement(Broadcast recievers)

Content providers : Data sharing link between two apps

ANDROID PERMISSION MODEL
App permission help support user privacy by protecting accesss to the following 
	Restricted data,such as system state and a users contact information 
	Restricted action, such as connecting to a paired device and recording audio
	
Types of permission
install time permission -> two types
	normal permission -> This permission allow access to data and actions that extend beyond your apps sandbox.
						However the data and actions present very little risk to the users privacy and the operations of the apps.
		Examples:
		Access location extra commands
		accesss network state
		access wifi state
		bluetooth
		broadcast sticky
	Signature level permission -> if the app declares a signature permission that another app has defined, and if two apps are signed by the same certificate, then the system grants the permission to the first app at install time. Otherwise, that first app cannot be granted the permission 
	Examples :
	Bind_Accessibility_Service
	Bind_AutoFill_Service
	Bind_Carrier_Service
	Bind_Device_admin
	
		
runtime permission : aka dangerous permissio, give your app additional access to restricted data, and they allow your app to perform restricted actions that more substantially affect the system and other apps

	read contacts
	send sms
	receive sms
	camera
	
special permission : corresponds to particular app operations. only the platform and oems can define special permissions. Additionally, the platform and oems usually define special permission when they want to protect access to particularly powerful actions, such as drawing over other apps

Examples :
	System_Alert window
	write settings
	



android manifest.xml : file which has all permission ,activites, contentproviders,services,intent required for the app to run properly

.dex : dalvik executable contain java byte code

res : a folder which has device configuration , bitmaps and layouts

resource.arsc : file containing binaries of compiled component which might include images,strings or other data used by app

META-INF : folder that contains the manifest information and other metadata about the java package carried by the jar file 

It contains file like manifest.mf, cert.sf and cert.rsa

apktools : helps to build and decompile application
jadx : to view app source code. To open in vm type "jadx-gui"
cat /etc/passwd



1) unzip apkfilename -d	
2) apktool d filename.apk
3) jarsigner
4) keytool
5) hexdump is a utility that displays the contents of binary files in hexadecimal, decimal, octal, or ASCII. It's a utility for inspection 
6) dexdump
7) 010 editor
8)logcat 
9) jadx


install dronzer
install andbug is a reverse engineering debugger for the android dalvik virtual machine employing the java debug wire protocaol 
install jdb
install introspy
substrate,frida and xposed


Coordinating with client 
	setting up working test environment
	restriction on the entrerprice wireless access point 
	Involve in task include monitoring and manipulating apps network traffic inspecting the app data files 
	asking for threat modeling documents
	
Basic Tampering Techniques
	Binary patching
		Patching is the process of changing the compiled app, e.g., changing code in binary executables, modifying Java bytecode,or tampering with resources.
	code injection
		Frida can inject a JavaScript VM into a process on both Android and iOS
		while Cycript injection with Substrate only works on iOS
	Using Disassemblers and Decompilers
		Disassemblers and decompilers allow you to translate an appâ€™s binary code or bytecode back into a more or less understandable format
	obfuscation
	Debugging and Tracing
	
	
impacket location :  /opt/impacket
	



